name: Build and deploy Sentinel for new customers
resources:
 pipelines:
   - pipeline: Scripts
     source: 'scriptsCI'
trigger:
 paths:
   include:
     - Onboard/*.json
   exclude:
     - Onboard/Completed/*
stages:
- stage: get_new_onboarding_file
  displayName: 'Getting new customer onboarding file'
  pool:
    name: Azure Pipelines
    vmImage: 'windows-latest'
  jobs:
    - job:
      displayName: 'Copy, validate, publish'
      steps:
       - task: CopyFiles@2
         displayName: 'Copy new customer onboarding json'
         inputs:
          SourceFolder: '$(Pipeline.Workspace)/s/Onboard'
          Contents: '*.json'
          TargetFolder: '$(Pipeline.Workspace)/s/Deploy'
       - task: Files-Validator@1
         displayName: 'Validating JSON'
         inputs:
          rootDir: '$(Pipeline.Workspace)/s/Deploy/*.json'
          validateXML: false
          validateJSON: true
          validateYAML: false
          validatePS: false
       - task: PublishBuildArtifacts@1
         displayName: 'Publish Artifact: OnboardingFile'
         inputs:
          PathtoPublish: '$(Pipeline.Workspace)/s/Deploy'
          Contents: '*.json'
          ArtifactName: OnboardingFile
       - pwsh: |
            $variables = Get-Content $(Pipeline.Workspace)/s/Deploy/*.json | ConvertFrom-Json -AsHashtable
            $variables .GetEnumerator() | ForEach-Object {
              $name = $_.key
              $value = $_.value
              Write-Host "##vso[task.setvariable variable=$name]$value"
            }
         displayName: 'Parse JSON into variables'
       - task: Bash@3
         displayName: 'Print variables'
         inputs:
          targetType: inline
          script: |
            echo "CustomerName = $(CustomerName)"
            echo "HostingNumber = $(HostingNumber)"
- stage: customer_deployment
  displayName: 'Deploying to Customer environment'
  pool:
    name: Azure Pipelines
    vmImage: 'windows-latest'
  jobs:
    - job: A
      displayName: 'Download Artifact'
      steps:
        - download: current
          artifact: OnboardingFile
          patterns: 'OnboardingFile/*.json'
    - job: B
      displayName: 'Set Local Variables'
      dependsOn: A
      pool:
        vmImage: windows-latest
      steps:
      - task: Bash@3
        displayName: 'Get Json values and set output variables'
        name: setOutput
        inputs:
          targetType: inline
          script: |
            echo "##vso[task.setvariable variable=CustomerName;]$(jq .CustomerName */Customer3.json)"
            echo "##vso[task.setvariable variable=HostingNumber;]$(jq .HostingNumber */Customer3.json)"
            echo "##vso[task.setvariable variable=WorkspaceName;]$(jq .WorkspaceName */Customer3.json)"
            echo "##vso[task.setvariable variable=ResourceGroupName;]$(jq .ResourceGroupName */Customer3.json)"
            echo "##vso[task.setvariable variable=ResourceGroupLocation;]$(jq .ResourceGroupLocation */Customer3.json)"
            echo "##vso[task.setvariable variable=ServiceConnectionName;]$(jq .ServiceConnectionName */Customer3.json)"
    - job: C
      displayName: 'Set Global Variables'
      dependsOn: B
      variables:
        CustomerName: $[ dependencies.B.outputs['setOutput.CustomerName'] ]
        HostingNumber: $[ dependencies.B.outputs['setOutput.HostingNumber'] ]
        WorkspaceName: $[ dependencies.B.outputs['setOutput.WorkspaceName'] ]
        ResourceGroupName: $[ dependencies.B.outputs['setOutput.ResourceGroupName'] ]
        ResourceGroupLocation: $[ dependencies.B.outputs['setOutput.ResourceGroupLocation'] ]
        ServiceConnectionName: $[ dependencies.B.outputs['setOutput.ServiceConnectionName'] ]
      steps:
      - task: Bash@3
        displayName: 'Print variables'
        inputs:
          targetType: inline
          script: |
            echo "CustomerName = $(CustomerName)"
            echo "HostingNumber = $(HostingNumber)"

- stage: cleanup_onboarding_file
  displayName: 'Clean up onboarding files'
  pool:
    name: Azure Pipelines
    vmImage: 'windows-latest'
  jobs:
    - job: Cleanup
      steps:
       - checkout: self
         persistCredentials: true
         fetchDepth: 0
       - task: CopyFiles@2
         displayName: 'Copy new customer onboarding json to completed'
         inputs:
          SourceFolder: '$(Pipeline.Workspace)/s/Onboard'
          Contents: '*.json'
          TargetFolder: '$(Pipeline.Workspace)/s/Onboard/Completed'
       - task: Files-Validator@1
         displayName: 'Validating JSON'
         inputs:
           rootDir: '$(Pipeline.Workspace)/s/Onboard'
           validateXML: false
           validateJSON: true
           validateYAML: false
           validatePS: false
       - task: DeleteFiles@1
         displayName: 'Remove unneeded files'
         inputs:
          SourceFolder: '$(Pipeline.Workspace)/s/Onboard'
          Contents: '*.json'
       - script: |
          git config --global user.email "marcackermann860@gmail.com"
          git config --global user.name "marcackermann86"
          git checkout master
          git add --all
          git commit -m "Moving deployed customers"
          git push origin master
         workingDirectory: '$(Pipeline.Workspace)/s/Onboard/Completed'